name: build

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'
      - 'examples/**'
      - '.dev_scripts/**'
      - '.pre-commit-config.yaml'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'
      - 'examples/**'
      - '.dev_scripts/**'
      - '.pre-commit-config.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.5.0, 1.8.1, 1.9.0, 1.10.2]
        # torch: [1.5.0, 1.6.0, 1.7.1, 1.8.1, 1.9.0, 1.10.2]
        include:
          - torch: 1.5.0
            torchvision: 0.6.0
            torch_mmcv: 1.5
          # - torch: 1.6.0
          #   torchvision: 0.7.0
          #   torch_mmcv: 1.6
          # - torch: 1.7.1
          #   torchvision: 0.8.2
          #   torch_mmcv: 1.7
          - torch: 1.8.1
            torchvision: 0.9.1
            torch_mmcv: 1.8
          - torch: 1.9.0
            torchvision: 0.10.0
            torch_mmcv: 1.9
          - torch: 1.10.2
            torchvision: 0.11.3
            torch_mmcv: 1.10
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade
      # - name: Install Pillow
      #   run: pip install "Pillow<9"
      #   if: ${{matrix.torchvision == '0.4.1'}}
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch${{matrix.torch}}/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install FaceXLib
        run: pip install facexlib
        if: ${{ matrix.torch != '1.5.0' && matrix.torch != '1.6.0' }}
      - name: Install av
        run: python -m pip install av
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
      - name: Show pip list and install
        run: pip list
      - name: Build and install
        run: rm -rf .eggs && pip install -e .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmedit -m pytest tests/
          coverage xml
          coverage report -m
