name: build

on:
  push:
    branches:
      - master

  pull_request:
    paths:
      - "**.py"
      - ".github/**"
      - "requirements/**"
      - "tests/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        torch:
          [
            1.5.1+cpu,
            1.5.1+cu92,
            1.6.0+cpu,
            1.7.1+cpu,
            1.8.1+cpu,
            1.8.1+cu102,
            1.9.0+cpu,
            1.10.2+cpu,
            1.10.2+cu113,
          ]
        include:
          - torch: 1.5.1+cpu
            torchvision: 0.6.1+cpu
            mmcv_link: cpu/torch1.5
            python: "3.7"
          - torch: 1.5.1+cu92
            torchvision: 0.6.1+cu92
            mmcv_link: cu92/torch1.5
            python: "3.7"
          - torch: 1.6.0+cpu
            torchvision: 0.7.0+cpu
            mmcv_link: cpu/torch1.6
            python: "3.7"
          - torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            mmcv_link: cpu/torch1.7
            python: "3.7"
          - torch: 1.8.1+cpu
            torchvision: 0.9.1+cpu
            mmcv_link: cpu/torch1.8
            python: "3.8"
          - torch: 1.8.1+cu102
            torchvision: 0.9.1+cu102
            mmcv_link: cpu/torch1.8
            python: "3.8"
          - torch: 1.9.0+cpu
            torchvision: 0.10.0+cpu
            mmcv_link: cpu/torch1.9
            python: "3.8"
          - torch: 1.10.2+cpu
            torchvision: 0.11.3+cpu
            mmcv_link: cpu/torch1.10
            python: "3.9"
          - torch: 1.10.2+cu113
            torchvision: 0.11.3+cu113
            mmcv_link: cpu/torch1.10
            python: "3.9"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: pip install pip --upgrade
      - name: Install PyTorch
        run: pip install torch==${{ matrix.torch }} torchvision==${{ matrix.torchvision }} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/${{ matrix.mmcv_link }}/index.html --only-binary mmcv-full
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install FaceXLib
        run: pip install facexlib
        if: ${{ matrix.torch != '1.5.1+cpu' && matrix.torch != '1.5.1+cu92' && matrix.torch != '1.6.0+cpu' }}
      - name: Install av
        run: python -m pip install av
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
      - name: Show pip list
        run: pip list
      - name: Build and install
        run: rm -rf .eggs && pip install -e .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmedit -m pytest tests/
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
  test_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        python: [3.8]
        platform: [cpu, cu111]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: pip install pip --upgrade --user
      - name: Install PyTorch
        # As a complement to Linux CI, we test on PyTorch LTS version
        run: pip install torch==1.8.2+${{ matrix.platform }} torchvision==0.9.2+${{ matrix.platform }} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
      - name: Install OpenCV
        run: pip install opencv-python-headless # will remove if mmcv add this dependency for windows
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install FaceXLib
        run: pip install facexlib
      - name: Install unittest dependencies
        run: pip install -r requirements.txt opencv-python-headless
      - name: Show pip list
        run: pip list
      - name: Build and install
        run: pip install -e .
      - name: Run unittests
        run: coverage run --branch --source mmedit -m pytest tests
      - name: Generate coverage report
        run: |
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
